//例子1：----------------------------------------------------------------------------------------------------------------------------------------------------------------
var arr = ["www", "excelib", "com"];

for (var v in arr) {
    console.log(v);
}

for (var v of arr) {
    console.log(v);
}

console.log("例1结束-----------------下面是例2")
//上面代码输出结果不同，结论是for in 遍历的结果是数组序号的集合，而for of遍历的结果则是具体每个数组元素值的集合
//----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//例子2：----------------------------------------------------------------------------------------------------------------------------------------------------------------------
//数组等集合类型的遍历是默认已经实现好的，而针对“对象”如果要自定义一定要对其实现System.iterator属性
//请具体参考如下：
var book = {
    name: "道德经",
    author: "老子"
};

book[Symbol.iterator] = function () {
    var keys = Object.getOwnPropertyNames(this);//把对象有多少个属性转换成字符串数组keys
    var obj = this,
        i = 0;
    return {
        next: function () {
            return {
                value: keys[i] + "->" + obj[keys[i]], //这里return返回的是对象，所以这里用的是逗号！此外，这一句说明我们希望自定义for of遍历时有"->"
                done: keys[i++] == null, //这行语句特别妙，首先i++意味着i+=1实在这条语句之后执行，其次如果没有超过
                //keys的范围就返回false(说明：因为只要keys[i++]有内容不会是null，那就返回false)，超过范围就返回true
                //value是自定义for of 遍历的内容(这个内容可以根据需要自定义修改)，然后done是true的话代表遍历结束标志，确保在调用时能够在正确的位置结束遍历
            }
        }
    }
}

for (var v1 in book) {
    console.log(v1);
}

for (var v2 of book) {
    console.log(v2)
}
//----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------