#ifndef CIRCLE_HPP
#define CIRCLE_HPP


#include <iostream>
#include <math.h>

#include "Shape.hpp"


namespace SSDK
{
/**
 *  @brief Circle
 *         表示圆形，继承shape基类
 *
 *  @author grace
 *  @version 1.00 2017-12-20 grace
 *                note:create it
 */
class Circle:public Shape
{
public:
    //>>>----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    //constructor & destructor

    Circle();
    /**
     * @brief Circle 初始化圆的各种信息，包括半径圆心坐标等
     * @param radius 圆的半径
     * @param centerX 圆心的X坐标
     * @param centerY 圆心的Y坐标
     */
    Circle(double radius,double centerX,double centerY);
    virtual ~Circle();

    //<<<----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    //>>>----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    //get & set function

    double radius() const {return m_radius;}
    void setRadius(double radius) {m_radius = radius;}

    //<<<----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    //>>>----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    //member function
    /**
     * @brief calcArea 重写基类里的计算面积函数，
     *                 求圆的面积
     * @return 圆的面积
     */
    virtual double calcArea() const override;

    /**
     * @brief isContained 重写基类里的判断是否包含在矩形内的函数，
     *                    判断圆是否包含在参数做构成的矩形区域内
     * @param xLeft 矩形左边界
     * @param xRight 矩形右边界
     * @param yTop 矩形上边界
     * @param yBottom 矩形下边界
     * @return 有两种返回方式
     *         true:包含
     *         false:不包含
     */
    virtual bool isContained(double xLeft,
                             double xRight,
                             double yTop,
                             double yBottom) const override;

    //<<<----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

private:
    //>>>----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    //member variant

    double m_radius{0.0}; //圆的半径

    //<<<----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
};
}//End of namespace SSDK


#endif // CIRCLE_HPP
