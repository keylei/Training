#ifndef IMAGESLOT_HPP
#define IMAGESLOT_HPP

#include <vector>

#include "Image.hpp"
#include "../sdk/customexception.hpp"

namespace Job
{
    /**
     *  @brief  表示一个图像槽，其中可以存放若干张同一长宽（单位：像素）的图像。
     *          其中存储了存储图像的长宽（单位：像素）和图像的所有像素点的灰度值。
     *
     *  @author lynn
     *  @version 1.00 2017-12-14 lynn
     *                note:create it
     */
    class ImageSlot
    {
    public:

        //>>>----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        //constructor & destructor

        /**
        *  @brief   默认构造函数
        *  @param   N/A
        *  @return  N/A
        */
        ImageSlot();

        /**
        *  @brief   双参构造函数,具有以下功能：
        *           将图像槽存放图像的长、宽保存到成员变量
        *  @param   imgHeight   :存放的图像的长度（单位：像素）
        *           imgWidth    :存放的图像的宽度（单位：像素）
        *  @return  N/A
        */
        ImageSlot(int imgHeight,int imgWidth);

        /**
        *  @brief   复制构造函数，此处为深复制
        *           ps:运算符"="会调用该函数
        *  @param   图像槽的复制源
        *  @return  N/A
        */
        ImageSlot(ImageSlot &imagSlot);

        /**
        *  @brief   释放图像槽中所有用于存放图像的空间
        *  @param   N/A
        *  @return  N/A
        */
        ~ImageSlot();

        //<<<----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

        //>>>----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        //set & get function

        std::vector<Image*> pImg() {return this->m_pImg;}

        int& imgHeight() { return this->m_imgHeight; }

        int& imgWidth() { return this->m_imgWidth; }

        //<<<----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

        //>>>----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        //member function

        /**
        *  @brief   在图像槽中加入一张图像
        *           ps:此处加入图像是复制一份传入的图像放到图像槽中
        *  @param   要加入的图像
        *  @return
        */
        void addImg(Image &img);

        /**
        *  @brief   释放图像槽中所有用于存放图像的空间
        *  @param   N/A
        *  @return  N/A
        */
        void destroy();

        //<<<----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    private:

        //>>>----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        //member variant

        std::vector<Image *> m_pImg;  //指向每个图像的所有像素点的灰度值的存放位置
        int m_imgHeight{0};
        int m_imgWidth{0};

        //<<<----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    };

}//End of namespace Job

#endif // IMAGESLOT_HPP
