//#include <math.h>

//#include <iostream>
//#include <thread>
//#include <chrono>

//using namespace std;

//void func(char*)
//{

//}

//void func(int)
//{

//}

//int main()
//{
//    //>>>----------------------------------------------------------------------------------------------------------
//    //在c语言中,NULL定义为void*, 也应许定义为0,下面的函数调用就会引起误解

//    //         由于我们经常习惯于用NULL表示空指针，所以上面的代码容易被误认为是调用第一个func，
//    // 但实际上，由于NULL在C++中是０，所以调用到第二个。虽然这个问题可以通过修改代码来解决，
//    // 但是为了避免用户使用上的错误，有些编译器做了比较激进的改进，典型的如g++编译器，
//    // 一旦遇到二义性就停止编译并向用户报告错误，虽然在一定程度上缓解了二义性带来的麻烦，
//    // 但也会带来代码移植性的限制。

//    //    func(NULL);

//    //>>>----------------------------------------------------------------------------------------------------------
//    //在C++11中，出于兼容性的考虑，NULL的二义性并没有消除，但是可以使用nullptr作为新的解决方案。
//    //nullptr是一个所谓"指针空值类型"常量，不被视为任何整型，例如，上面的代码，一定会调用func(char*)。

//    //    func(nullptr);

//    //>>>----------------------------------------------------------------------------------------------------------
//    //正确例子
////    int* pNumber{nullptr};
////    int* m_pNumber{nullptr};
////    int* g_pNumber{nullptr};

//    //>>>----------------------------------------------------------------------------------------------------------
//    //错误例子
////    int *pNumber;
////    int *pNumber{NULL};
////    int *pNumber{0x0};
////    printf("%p", pNumber);



//    return 0;
//}
